# Generated by Django 4.1.8 on 2023-05-22 19:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pathlib
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("agent", "0001_initial"),
        ("api_key", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("event_type", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("data", models.JSONField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Memory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ObjectClass",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("avatar", models.ImageField(upload_to="object-avatar/")),
                ("interactions", models.JSONField()),
                ("is_public", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorldClass",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("thumbnail", models.ImageField(upload_to="world-thumbnails/")),
                ("is_public", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("RS", "Research"),
                            ("SD", "Software Development"),
                            ("MK", "Marketing"),
                            ("AC", "Accounting"),
                            ("BP", "Business Process"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "docker_path",
                    models.FilePathField(
                        max_length=500,
                        path=pathlib.PureWindowsPath(
                            "C:/Users/WRASH-TECH/Documents/Tech-Project/Web/Django/Yeager/yeag_sliper/yeager_ai/JSONFILE"
                        ),
                    ),
                ),
                ("agent_classes", models.ManyToManyField(to="agent.agentclass")),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("object_classes", models.ManyToManyField(to="world.objectclass")),
                ("tags", models.ManyToManyField(blank=True, to="agent.tag")),
                (
                    "user_interactions",
                    models.ManyToManyField(
                        blank=True, related_name="interaction", to="world.event"
                    ),
                ),
                (
                    "world_outputs",
                    models.ManyToManyField(
                        blank=True, related_name="output", to="world.event"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorldInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("uuid", models.CharField(default=uuid.uuid4, max_length=100)),
                ("name", models.CharField(max_length=100)),
                ("is_public", models.BooleanField(default=False)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("STARTING", "Starting"),
                            ("BLOCKED", "Blocked"),
                            ("PAUSED", "Paused"),
                            ("STOPPED", "Stopped"),
                            ("PROCESSING", "Processing"),
                            ("IDLE", "Idle"),
                            ("ERROR", "Error"),
                            ("DELETED", "Deleted"),
                            ("TERMINATED", "Terminated"),
                        ],
                        default="STARTING",
                        max_length=50,
                    ),
                ),
                ("is_running", models.BooleanField(default=False)),
                ("is_test", models.BooleanField(default=False)),
                ("bit16_url", models.URLField(blank=True, null=True)),
                (
                    "socket_path",
                    models.FilePathField(
                        max_length=500,
                        path=pathlib.PureWindowsPath(
                            "C:/Users/WRASH-TECH/Documents/Tech-Project/Web/Django/Yeager/yeag_sliper/yeager_ai/JSONFILE"
                        ),
                    ),
                ),
                (
                    "total_ml_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "total_cloud_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "total_memory_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "total_external_tool_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "shutdown_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "api_key",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api_key.apikey",
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="agent.tag")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "world_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="world.worldclass",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ObjectInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("uuid", models.CharField(default=uuid.uuid4, max_length=100)),
                (
                    "object_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="world.objectclass",
                    ),
                ),
                (
                    "world",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="world.worldinstance",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
